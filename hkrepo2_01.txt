from aws_cdk import (
    aws_rds as rds,
    aws_cloudwatch as cloudwatch,
    core
)

class MyCdkAppStack(core.Stack):

    def __init__(self, scope: core.Construct, id: str, **kwargs) -> None:
        super().__init__(scope, id, **kwargs)

        # Create an RDS Aurora PostgreSQL instance
        database = rds.DatabaseInstance(
            self, "MyDatabase",
            engine=rds.DatabaseInstanceEngine.aurora_postgres(version=rds.AuroraPostgresEngineVersion.VER_10_11),
            instance_class=core.Fn.select(0, core.Fn.split("-", core.Fn.ref("AWS::CDK::StackName"))),
            master_username="admin",
            master_user_password=core.SecretValue.plain_text("YourPassword"),
        )

        # Create a CloudWatch metric for the RDS instance's CPU utilization
        cpu_metric = cloudwatch.Metric(
            metric_name="CPUUtilization",
            namespace="AWS/RDS",
            dimensions={
                "DBInstanceIdentifier": database.instance_identifier,
            },
            statistic="Average",
        )

        # Create a CloudWatch alarm for the CPU utilization metric
        alarm = cloudwatch.Alarm(
            self, "CPUMetricAlarm",
            metric=cpu_metric,
            threshold=90,  # Set the desired threshold
            evaluation_periods=1,
            comparison_operator=cloudwatch.ComparisonOperator.GREATER_THAN_THRESHOLD,
            alarm_description="CPU Utilization Alarm",
            alarm_name="CPUMetricAlarm",
            actions_enabled=True,
        )

        # Send a notification when the alarm state changes to ALARM
        alarm.add_alarm_action(
            cloudwatch_actions.SnsAction(
                topic=my_topic  # Replace with your SNS topic
            )
        )
